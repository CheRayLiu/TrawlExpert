/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-03-29 13:42:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("Double Handle Slider Modified from: http://jqueryui.com/slider/#range\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta name=\"keywords\" content=\"insert, some, keywords\"> <!--TODO-->\r\n");
      out.write("    <meta name=\"description\" content=\"insert a description\"> <!--TODO-->\r\n");
      out.write("    <title>TrawlTool</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\r\n");
      out.write("\r\n");
      out.write("    <!--JQuery-->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("    <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- MUST load JQuery Library before loading this-->\r\n");
      out.write("    <script src=\"script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!--Fonts-->\r\n");
      out.write("    <!--Open Sans Rg-400/Semi-600/Bd-700-->\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!--Plugins-->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"headerWrapper\">\r\n");
      out.write("            <a href=\"index.jsp\" >TrawlTool</a>\r\n");
      out.write("            <span class=\"nav-bar\">\r\n");
      out.write("                <a href=\"about.html\">About</a> |\r\n");
      out.write("                <a href=\"index.html\" target=\"_blank\">Gitlab/Github Nonfunc!</a>\r\n");
      out.write("            </span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <section id=\"main\">\r\n");
      out.write("        <section id=\"formWrapper\">\r\n");
      out.write("            <section id=\"pickSciRanks\">\r\n");
      out.write("                Phylum:\r\n");
      out.write("                <select name=\"pickSciR\" id=\"pickPhylum\" size=\"1\" onChange=\"changedSciR('phylum')\"><!--Dynamically Filled--></select>\r\n");
      out.write("\r\n");
      out.write("                Class:\r\n");
      out.write("                <select name=\"pickSciR\" id=\"pickClass\" size=\"1\" onChange=\"changedSciR('class')\">\r\n");
      out.write("                    <option value=\"00\">Arthropoda</option>\r\n");
      out.write("                    <option value=\"01\">Chordata</option>\r\n");
      out.write("                    <option value=\"03\">Mollusca</option>\r\n");
      out.write("                </select>\r\n");
      out.write("                Order:\r\n");
      out.write("                <select name=\"pickSciR\" size=\"1\" onChange=\"alert()\"><!--Dynamically Filled--></select>\r\n");
      out.write("                Family:\r\n");
      out.write("                <select name=\"pickSciR\" size=\"1\"><!--Dynamically Filled--></select>\r\n");
      out.write("                Genus:\r\n");
      out.write("                <select name=\"pickSciR\" size=\"1\"><!--Dynamically Filled--></select>\r\n");
      out.write("                Species:\r\n");
      out.write("                <select name=\"pickSciR\" size=\"1\"><!--Dynamically Filled--></select>\r\n");
      out.write("            </section>\r\n");
      out.write("\r\n");
      out.write("            <section id=\"yearIn\">\r\n");
      out.write("                Year Range:\r\n");
      out.write("                <span id=\"fromtoYear\">InnerHtml</span>\r\n");
      out.write("                <form>\r\n");
      out.write("                    <div id=\"slider-range\"></div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </section>\r\n");
      out.write("\r\n");
      out.write("            <section id=\"outputIn\">\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <input type=\"radio\" name=\"pickOutput\" value=\"map\"> Map\r\n");
      out.write("                <input type=\"radio\" name=\"pickOutput\" value=\"histogram\" checked> Histogram\r\n");
      out.write("                <button type=\"button\" onclick=\"\">Load</button>\r\n");
      out.write("                <button type=\"button\" onclick=\"\">View Individual Records</button> <!--To records.html-->\r\n");
      out.write("            </section>\r\n");
      out.write("        </section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <section id=\"outputWrapper\">\r\n");
      out.write("            <section id=\"outputDetails\">Stuff like population count, entries found, etc. go here</section>\r\n");
      out.write("            <section id=\"outputBox\">Map, Histogram Box. Histogram selected by default but we might want to have a loading screen instead.\r\n");
      out.write("                <div id=\"console\">~~~ PSEUDO-CONSOLE ~~~<br></div>\r\n");
      out.write("            </section>\r\n");
      out.write("        </section>\r\n");
      out.write("    </section>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
